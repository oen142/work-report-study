plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'java'
}

group = 'biz.dreamaker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set("queryDslVersion", "4.4.0")
    set('lombokVersion', "1.18.16")
}

dependencies {
    //query dsl
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응


    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

    //open pdf
    implementation group: 'com.github.librepdf', name: 'openpdf', version: '1.3.26'
// https://mvnrepository.com/artifact/com.github.librepdf/openpdf-fonts-extra
    implementation group: 'com.github.librepdf', name: 'openpdf-fonts-extra', version: '1.3.26'


    // handlebars
    implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0'

    // log
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    // jgraph
    implementation 'org.jgrapht:jgrapht-core:1.0.1'

    // jwt
    implementation 'com.auth0:java-jwt:3.15.0'

    // rest docs
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured:2.0.5.RELEASE'

    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation group: 'mysql', name: 'mysql-connector-java'


    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // https://mvnrepository.com/artifact/io.github.javaunit/autoparams
    implementation group: 'io.github.javaunit', name: 'autoparams', version: '0.2.0'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
}
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

task testDocument(type: Test) {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*.documentation.*"
    }
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn testDocument

    from file("build/asciidoc/html5/index.html")
    into file("src/main/resources/static/docs")
}
